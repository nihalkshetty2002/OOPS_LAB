// Program: Write a C++ program to create a class called Matrix using 2-Dimensional array of
// integers. Implement the following by overloading the operator == which checks the
// compatibility of the two matrices to be added and subtracted. Perform the following
// by overloading + and - operators.
//  if ( m1 == m2 )
//   {
//    m3 = m1 + m2;
//     m4 = m1 - m2;
//      }
//       else { // Display an error message
//
//         } where m1, m2, m3, and m4 are objects of Matrix class.
// Name: Adithya Bashri S
// Reg No: 230970068
// Date: 8/9/23

#include <iostream>
using namespace std;

class matrix
{
public:
        int r, c;

        matrix(int row = 2, int col = 2) : r(row), c(col)
        {
        }

        int mat[10][10];

        void values()
        {
                int num;
                for (int i = 0; i < r; i++)
                {
                        for (int j = 0; j < c; j++)
                        {
                                cout << "\na[" << i + 1 << "]"
                                     << "[" << j + 1 << "] :";
                                cin >> num;
                                mat[i][j] = num;
                        }
                }
        }

        void display()
        {
                cout << "\n";
                for (int i = 0; i < r; i++)
                {

                        for (int j = 0; j < c; j++)
                        {
                                cout << "\t" << mat[i][j];
                        }

                        cout << "\n";
                }
        }

        bool operator==(matrix m) const
        {

                if ((m.r) == r && (m.c) == c)
                {
                        return true;
                }
                return false;
        }

        matrix operator+(matrix b) const
        {

                matrix ret(r, c);

                for (int i = 0; i < r; i++)
                {
                        for (int j = 0; j < c; j++)
                        {

                                ret.mat[i][j] = mat[i][j] + b.mat[i][j];
                        }
                }

                return ret;
        }
        matrix operator-(matrix b) const
        {

                matrix ret(r, c);

                for (int i = 0; i < r; i++)
                {
                        for (int j = 0; j < c; j++)
                        {

                                ret.mat[i][j] = mat[i][j] - b.mat[i][j];
                        }
                }

                return ret;
        }
};
int main()
{
        system("clear");
        int r1, c1, r2, c2;
        cout << "Rows of matrix 1: ";
        cin >> r1;
        cout << "Columns of matrix 1: ";
        cin >> c1;
        cout << "Rows of matrix 2: ";
        cin >> r2;
        cout << "Columns of matrix 2: ";
        cin >> c2;

        matrix m1(r1, c1), m2(r2, c2), m3(r1, c1), m4(r1, c2);

        cout << "\n---Matrix m1---";
        m1.values();

        cout << "\n---Matrix m2---";
        m2.values();

        if (m1 == m2)
        {
                cout << "\n------m3 = m1 + m2------";
                m3 = m1 + m2;
                m3.display();

                cout << "\n------m4 = m1 - m2------";
                m4 = m1 - m2;
                m4.display();
        }

        else
        {
                cout << "\nThe two matrices are not equal.";
        }

        cout << endl;
        return 0;
}